# Generated by Django 2.2.2 on 2019-06-11 03:03

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numeric', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('official_name', models.CharField(max_length=150)),
                ('alpha_2', models.CharField(max_length=2)),
                ('alpha_3', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsCustomer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('short_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'customers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsError',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('user_agent', models.CharField(db_column='user-agent', max_length=200)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('location_lat_long', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), db_column='pin', size=None)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('message', models.CharField(max_length=2000)),
                ('fatal', models.BooleanField()),
                ('event_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'errors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvents',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('share_type', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsAlexaPause',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('alexa_user', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsAlexaPlay',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('alexa_user', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsAlexaPlayNext',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('alexa_user', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsAlexaPlayPrevious',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('alexa_user', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsAlexaResume',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('alexa_user', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsEnded',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsGlobalPlay',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('user_agent', models.CharField(blank=True, max_length=200, null=True)),
                ('alexa_user', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsPause',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsPlay',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsPodcastPlay',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('user_agent', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsSeek',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('seek_from', models.FloatField()),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsShare',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('share_type', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsSkipBackwards',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('seek_from', models.FloatField()),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventsSkipForwards',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField()),
                ('from_time', models.FloatField()),
            ],
            options={
                'db_table': 'events_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsNarration',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=100)),
                ('public_library', models.BooleanField(default=False)),
                ('featured_image', models.CharField(max_length=100)),
                ('gen_description', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('description', models.CharField(max_length=100)),
                ('content', models.CharField(max_length=100)),
                ('blog_url', models.URLField()),
                ('short_url', models.URLField()),
                ('in_sitemap', models.BooleanField()),
                ('keywords_string', models.CharField(max_length=200)),
                ('meta_title', models.CharField(max_length=100)),
                ('narrator_id', models.IntegerField(null=True)),
                ('audio_length', models.DurationField(blank=True, null=True)),
                ('audio_url', models.URLField(blank=True, db_index=True, null=True)),
                ('preferred_gender', models.CharField(max_length=200)),
                ('site_id', models.IntegerField(null=True)),
                ('status', models.IntegerField(null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('publish_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'narrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsPlaySession',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField(blank=True, null=True)),
                ('tot_play_time', models.IntegerField(blank=True, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'events_session_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsTimeUpdate',
            fields=[
                ('id', models.CharField(db_column='_id', max_length=200, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('gross_events', 'ALL'), ('gross_play', 'PLAYS'), ('play', 'PLAY'), ('podcastplay', 'PODCAST_PLAY'), ('alexaplay', 'ALEXA_PLAY'), ('alexaplaynext', 'ALEXA_PLAY_NEXT'), ('alexaplayprev', 'ALEXA_PLAY_PREVIOUS'), ('alexaresume', 'ALEXA_RESUME'), ('alexapause', 'ALEXA_PAUSE'), ('pause', 'PAUSE'), ('skip_forwards', 'SKIP_FORWARDS'), ('skip_backwards', 'SKIP_BACKWARDS'), ('seek', 'SEEK'), ('session_end', 'ENDED'), ('share', 'SHARE')], max_length=64)),
                ('customer_short_name', models.CharField(db_column='customer', max_length=100, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer', models.CharField(blank=True, max_length=2083, null=True)),
                ('browser', models.CharField(blank=True, max_length=64, null=True)),
                ('device', models.CharField(blank=True, max_length=64, null=True)),
                ('os', models.CharField(blank=True, max_length=64, null=True)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('build_num', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('location_city', models.CharField(blank=True, max_length=128, null=True)),
                ('location_state', models.CharField(blank=True, max_length=128, null=True)),
                ('location_country', models.CharField(blank=True, max_length=128, null=True)),
                ('pin', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('playlist', models.IntegerField(blank=True, null=True)),
                ('play_ranges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('library_type', models.CharField(blank=True, max_length=64, null=True)),
                ('library_genre', models.CharField(blank=True, max_length=128, null=True)),
                ('delta_time', models.DurationField(blank=True, null=True)),
                ('event_time', models.DateTimeField()),
                ('audio_time', models.FloatField(blank=True, null=True)),
                ('play_pct', models.FloatField(blank=True, null=True)),
                ('tot_play_time', models.IntegerField(blank=True, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'events_timeupdate_2018',
                'managed': False,
            },
        ),
    ]
